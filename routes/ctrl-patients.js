'use strict';

 /**
 * patient controller file * autogenerated by mongoose-scaffold-crud **/

var patients = require('express').Router(),
    Model = require('../models/model-patients.js');

patients.get('/', function(req, res) {
    Model.find(function(err, patients){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting patients.'
                });
            }
            return res.json(patients);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
        return res.render('patients/index', {patients: patients});
        }
    });
});

patients.post('/', function(req, res) {
    var patient = new Model({
        'patient_id': req.body['patient_id'],
        'ssn': req.body['ssn'],
        'firstname': req.body['firstname'],
        'lastname': req.body['lastname'],
        'email': req.body['email'],
        'gender': req.body['gender'],
        'blood_type': req.body['blood_type'],
        // TODO: generate Array parser.,
        // TODO: generate Array parser.
    });
    patient.save(function(err, patient){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error saving item.',
                    error: err
                });
            }
            return res.json({
                message: 'saved',
                _id: patient._id
            });
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            return res.render('patients/edit', {patient: patient});
        }
    });
});

patients.get('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, patient){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting patient.'
                });
            }
            if(!patient) {
                return res.json(404, {
                    message: 'No such patient.'
                });
            }
            return res.json(patient);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!patient) {
                return res.end('No such patient');
            }
            return res.render('patients/edit', {patient: patient, flash: 'Created.'});
        }
    });
});

patients.put('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, patient){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error saving patient',
                    error: err
                });
            }
            if(!patient) {
                return res.json(404, {
                    message: 'No such patient'
                });
            }
            patient['patient_id'] = req.body['patient_id'] ? req.body['patient_id'] : patient['patient_id'];
            patient['ssn'] = req.body['ssn'] ? req.body['ssn'] : patient['ssn'];
            patient['firstname'] = req.body['firstname'] ? req.body['firstname'] : patient['firstname'];
            patient['lastname'] = req.body['lastname'] ? req.body['lastname'] : patient['lastname'];
            patient['email'] = req.body['email'] ? req.body['email'] : patient['email'];
            patient['gender'] = req.body['gender'] ? req.body['gender'] : patient['gender'];
            patient['blood_type'] = req.body['blood_type'] ? req.body['blood_type'] : patient['blood_type'];
            // TODO: generate Array parser.
            // TODO: generate Array parser.
            patient.save(function(err, patient){
                if(err) {
                    return res.json(500, {
                        message: 'Error getting patient.'
                    });
                }
                if(!patient) {
                    return res.json(404, {
                        message: 'No such patient'
                    });
                }
                return res.json(patient);
            });
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!patient) {
                return res.end('No such patient');
            }
            patient['patient_id'] = req.body['patient_id'] ? req.body['patient_id'] : patient['patient_id'];
            patient['ssn'] = req.body['ssn'] ? req.body['ssn'] : patient['ssn'];
            patient['firstname'] = req.body['firstname'] ? req.body['firstname'] : patient['firstname'];
            patient['lastname'] = req.body['lastname'] ? req.body['lastname'] : patient['lastname'];
            patient['email'] = req.body['email'] ? req.body['email'] : patient['email'];
            patient['gender'] = req.body['gender'] ? req.body['gender'] : patient['gender'];
            patient['blood_type'] = req.body['blood_type'] ? req.body['blood_type'] : patient['blood_type'];
            // TODO: generate Array parser.
            // TODO: generate Array parser.
            patient.save(function(err, patient){
                if(err) {
                    return res.send('500: Internal Server Error', 500);
                }
                if(!patient) {
                    return res.end('No such patient');
                }
                return res.render('patients/edit', {patient: patient, flash: 'Saved.'});
            });
        }
    });
});

patients.delete('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, patient){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting patient.'
                });
            }
            if(!patient) {
                return res.json(404, {
                    message: 'No such patient'
                });
            }
            return res.json(patient);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!patient) {
                return res.end('No such patient');
            }
            return res.render('index', {flash: 'Item deleted.'});
        }
    });
});

module.exports.patients = patients;